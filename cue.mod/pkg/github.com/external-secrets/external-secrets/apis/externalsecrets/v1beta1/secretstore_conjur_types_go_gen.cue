// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/external-secrets/external-secrets/apis/externalsecrets/v1beta1

package v1beta1

import esmeta "github.com/external-secrets/external-secrets/apis/meta/v1"

#ConjurProvider: {
	url: string @go(URL)

	// +optional
	caBundle?: string @go(CABundle)

	// +optional
	caProvider?: null | #CAProvider @go(CAProvider,*CAProvider)
	auth:        #ConjurAuth        @go(Auth)
}

#ConjurAuth: {
	// +optional
	apikey?: null | #ConjurAPIKey @go(APIKey,*ConjurAPIKey)

	// +optional
	jwt?: null | #ConjurJWT @go(Jwt,*ConjurJWT)
}

#ConjurAPIKey: {
	account:    string                           @go(Account)
	userRef?:   null | esmeta.#SecretKeySelector @go(UserRef,*esmeta.SecretKeySelector)
	apiKeyRef?: null | esmeta.#SecretKeySelector @go(APIKeyRef,*esmeta.SecretKeySelector)
}

#ConjurJWT: {
	account: string @go(Account)

	// The conjur authn jwt webservice id
	serviceID: string @go(ServiceID)

	// Optional HostID for JWT authentication. This may be used depending
	// on how the Conjur JWT authenticator policy is configured.
	// +optional
	hostId?: string @go(HostID)

	// Optional SecretRef that refers to a key in a Secret resource containing JWT token to
	// authenticate with Conjur using the JWT authentication method.
	// +optional
	secretRef?: null | esmeta.#SecretKeySelector @go(SecretRef,*esmeta.SecretKeySelector)

	// Optional ServiceAccountRef specifies the Kubernetes service account for which to request
	// a token for with the `TokenRequest` API.
	// +optional
	serviceAccountRef?: null | esmeta.#ServiceAccountSelector @go(ServiceAccountRef,*esmeta.ServiceAccountSelector)
}
